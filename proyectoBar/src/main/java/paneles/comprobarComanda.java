/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package paneles;

import clases.Comanda;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.text.Normalizer;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import static paneles.empezarComanda.getCodigoComanda;
import sql.crudsql;

/**
 *
 * @author willruiz
 */
public class comprobarComanda extends javax.swing.JDialog {

    ArrayList<Comanda> comandas = new ArrayList<>();

    public comprobarComanda(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public comprobarComanda() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        tituloPanel = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        btnVolver = new javax.swing.JButton();
        subtituloPanel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtcodigoComanda = new javax.swing.JTextField();
        btnCargarDatos = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaComanda = new javax.swing.JTable();
        btnGenerarXml = new javax.swing.JButton();
        btnTicketCocina = new javax.swing.JButton();
        btnTicketBarra = new javax.swing.JButton();
        btnGenerarObj = new javax.swing.JButton();
        btnGenerarTxt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        background.setBackground(new java.awt.Color(227, 232, 232));
        background.setPreferredSize(new java.awt.Dimension(750, 430));

        tituloPanel.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        tituloPanel.setText("Comprobar Comanda");

        btnVolver.setBackground(new java.awt.Color(0, 102, 153));
        btnVolver.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnVolver.setForeground(new java.awt.Color(255, 255, 255));
        btnVolver.setText("Volver");
        btnVolver.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnVolver.setMaximumSize(new java.awt.Dimension(120, 20));
        btnVolver.setMinimumSize(new java.awt.Dimension(120, 20));
        btnVolver.setPreferredSize(new java.awt.Dimension(120, 20));
        btnVolver.setSize(new java.awt.Dimension(120, 20));
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        subtituloPanel.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        subtituloPanel.setForeground(new java.awt.Color(153, 153, 153));
        subtituloPanel.setText("Aquí se muestra su comanda:");

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("CÓDIGO COMANDA");

        btnCargarDatos.setBackground(new java.awt.Color(0, 102, 153));
        btnCargarDatos.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnCargarDatos.setForeground(new java.awt.Color(255, 255, 255));
        btnCargarDatos.setText("Cargar");
        btnCargarDatos.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnCargarDatos.setMaximumSize(new java.awt.Dimension(120, 20));
        btnCargarDatos.setMinimumSize(new java.awt.Dimension(120, 20));
        btnCargarDatos.setPreferredSize(new java.awt.Dimension(120, 20));
        btnCargarDatos.setSize(new java.awt.Dimension(120, 20));
        btnCargarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarDatosActionPerformed(evt);
            }
        });

        tablaComanda.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        tablaComanda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tablaComanda);

        btnGenerarXml.setBackground(new java.awt.Color(0, 102, 153));
        btnGenerarXml.setFont(new java.awt.Font("Helvetica Neue", 1, 10)); // NOI18N
        btnGenerarXml.setForeground(new java.awt.Color(255, 255, 255));
        btnGenerarXml.setText("Generar XML");
        btnGenerarXml.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnGenerarXml.setMaximumSize(new java.awt.Dimension(120, 20));
        btnGenerarXml.setMinimumSize(new java.awt.Dimension(120, 20));
        btnGenerarXml.setPreferredSize(new java.awt.Dimension(120, 20));
        btnGenerarXml.setSize(new java.awt.Dimension(120, 20));
        btnGenerarXml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarXmlActionPerformed(evt);
            }
        });

        btnTicketCocina.setBackground(new java.awt.Color(0, 102, 153));
        btnTicketCocina.setFont(new java.awt.Font("Helvetica Neue", 1, 12)); // NOI18N
        btnTicketCocina.setForeground(new java.awt.Color(255, 255, 255));
        btnTicketCocina.setText("Generar Ticket Cocina");
        btnTicketCocina.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnTicketCocina.setMaximumSize(new java.awt.Dimension(120, 20));
        btnTicketCocina.setMinimumSize(new java.awt.Dimension(120, 20));
        btnTicketCocina.setPreferredSize(new java.awt.Dimension(120, 20));
        btnTicketCocina.setSize(new java.awt.Dimension(120, 20));
        btnTicketCocina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTicketCocinaActionPerformed(evt);
            }
        });

        btnTicketBarra.setBackground(new java.awt.Color(0, 102, 153));
        btnTicketBarra.setFont(new java.awt.Font("Helvetica Neue", 1, 12)); // NOI18N
        btnTicketBarra.setForeground(new java.awt.Color(255, 255, 255));
        btnTicketBarra.setText("Generar Ticket Barra");
        btnTicketBarra.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnTicketBarra.setMaximumSize(new java.awt.Dimension(120, 20));
        btnTicketBarra.setMinimumSize(new java.awt.Dimension(120, 20));
        btnTicketBarra.setPreferredSize(new java.awt.Dimension(120, 20));
        btnTicketBarra.setSize(new java.awt.Dimension(120, 20));
        btnTicketBarra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTicketBarraActionPerformed(evt);
            }
        });

        btnGenerarObj.setBackground(new java.awt.Color(0, 102, 153));
        btnGenerarObj.setFont(new java.awt.Font("Helvetica Neue", 1, 10)); // NOI18N
        btnGenerarObj.setForeground(new java.awt.Color(255, 255, 255));
        btnGenerarObj.setText("Generar OBJ");
        btnGenerarObj.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnGenerarObj.setMaximumSize(new java.awt.Dimension(120, 20));
        btnGenerarObj.setMinimumSize(new java.awt.Dimension(120, 20));
        btnGenerarObj.setPreferredSize(new java.awt.Dimension(120, 20));
        btnGenerarObj.setSize(new java.awt.Dimension(120, 20));
        btnGenerarObj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarObjActionPerformed(evt);
            }
        });

        btnGenerarTxt.setBackground(new java.awt.Color(0, 102, 153));
        btnGenerarTxt.setFont(new java.awt.Font("Helvetica Neue", 1, 10)); // NOI18N
        btnGenerarTxt.setForeground(new java.awt.Color(255, 255, 255));
        btnGenerarTxt.setText("Generar TXT");
        btnGenerarTxt.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnGenerarTxt.setMaximumSize(new java.awt.Dimension(120, 20));
        btnGenerarTxt.setMinimumSize(new java.awt.Dimension(120, 20));
        btnGenerarTxt.setPreferredSize(new java.awt.Dimension(120, 20));
        btnGenerarTxt.setSize(new java.awt.Dimension(120, 20));
        btnGenerarTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarTxtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2)
                            .addGroup(backgroundLayout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(backgroundLayout.createSequentialGroup()
                                        .addComponent(tituloPanel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(backgroundLayout.createSequentialGroup()
                                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(subtituloPanel)
                                            .addGroup(backgroundLayout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addGap(69, 69, 69)
                                                .addComponent(txtcodigoComanda, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(28, 28, 28)
                                                .addComponent(btnCargarDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 107, Short.MAX_VALUE))))))
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 682, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(backgroundLayout.createSequentialGroup()
                                .addComponent(btnTicketCocina, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnTicketBarra, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnGenerarXml, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(backgroundLayout.createSequentialGroup()
                                .addGap(582, 582, 582)
                                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnGenerarObj, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnGenerarTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tituloPanel))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(subtituloPanel)
                .addGap(18, 18, 18)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtcodigoComanda, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCargarDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnTicketCocina, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTicketBarra, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnGenerarXml, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnGenerarTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGenerarObj, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed
    crudsql crud = new crudsql();
    private void btnCargarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarDatosActionPerformed
        txtcodigoComanda.setText(getCodigoComanda());
        tablaComanda.setModel(crud.mostrarComanda(txtcodigoComanda.getText()));


    }//GEN-LAST:event_btnCargarDatosActionPerformed

    private void btnGenerarXmlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarXmlActionPerformed
        crearXml(tablaComanda);
    }//GEN-LAST:event_btnGenerarXmlActionPerformed

    private void btnTicketCocinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTicketCocinaActionPerformed
        crud.comandaCocinaPdf(txtcodigoComanda.getText());
    }//GEN-LAST:event_btnTicketCocinaActionPerformed

    private void btnTicketBarraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTicketBarraActionPerformed
        crud.comandaBarraPdf(txtcodigoComanda.getText());
    }//GEN-LAST:event_btnTicketBarraActionPerformed

    private void btnGenerarObjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarObjActionPerformed
        ficheroObjetos(tablaComanda);
        String ruta = "src/main/java/ficheros/datos.bin";
//        leerFicheroObjetos(ruta);
    }//GEN-LAST:event_btnGenerarObjActionPerformed

    private void btnGenerarTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarTxtActionPerformed
        ficheroTexto(tablaComanda);
    }//GEN-LAST:event_btnGenerarTxtActionPerformed

    public void crearXml(JTable tabla) {
        for (int i = 0; i < tabla.getRowCount(); i++) {
            Comanda comanda = new Comanda();
            String codigo_comanda = tabla.getValueAt(i, 0).toString();
            comanda.setCodigoComanda(codigo_comanda);

            String codigo_mesa = tabla.getValueAt(i, 1).toString();
            comanda.setCodigoMesa(codigo_mesa);

            String nombre_plato = tabla.getValueAt(i, 2).toString();
            comanda.setNombrePlato(nombre_plato);

            String cantidad_plato = tabla.getValueAt(i, 3).toString();
            comanda.setCantidadPlato(cantidad_plato);

            String categoria_plato = tabla.getValueAt(i, 4).toString();
            comanda.setCategoriaPlato(categoria_plato);

            String fecha_comanda = tabla.getValueAt(i, 5).toString();
            comanda.setFechaComanda(fecha_comanda);

            comandas.add(comanda);
        }

        FileWriter fichero = null;
        try {
            String ruta = "src/main/java/ficheros/comanda.xml";

            //Crear FileWriter y PrintWriter
            fichero = new FileWriter(ruta);
            PrintWriter writer = new PrintWriter(fichero);

            //Escribir el contenido del xml recorriendo el ArrayList de evaluaciones y extrayendo sus datos
            writer.println("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
            writer.println("<comandas>");

            for (Comanda comanda : comandas) {
                writer.println("<comanda>");
                writer.println("<cod_comanda>" + quitarAcentos(comanda.getCodigoComanda()) + "</cod_comanda>");
                writer.println("<mesa>" + quitarAcentos(comanda.getCodigoMesa()) + "</mesa>");
                writer.println("<plato>" + quitarAcentos(comanda.getNombrePlato()) + "</plato>");
                writer.println("<cantidad>" + quitarAcentos(comanda.getCantidadPlato()) + "</cantidad>");
                writer.println("<categoria_plato>" + quitarAcentos(comanda.getCategoriaPlato()) + "</categoria_plato>");
                writer.println("<fecha_comanda>" + quitarAcentos(comanda.getFechaComanda()) + "</fecha_comanda>");
                writer.println("</comanda>");
            }
            writer.println("</comandas>");
            JOptionPane.showMessageDialog(null, "Fichero Xml creado con éxito", "Fichero creado", JOptionPane.INFORMATION_MESSAGE);

        } catch (IOException ex) {

        } finally {
            try {
                if (fichero != null) {
                    fichero.close();
                }
            } catch (IOException ex) {

            }
        }

    }

    //Método para quitar acentos de palabras
    public static String quitarAcentos(String palabra) {
        String normalizado = Normalizer.normalize(palabra, Normalizer.Form.NFD);
        return normalizado.replaceAll("\\p{InCombiningDiacriticalMarks}+", "");
    }

    public void ficheroObjetos(JTable tabla) {
        ArrayList<Comanda> objetosComanda = new ArrayList<>();
        for (int i = 0; i < tabla.getRowCount(); i++) {
            Comanda comanda = new Comanda();
            String codigo_comanda = tabla.getValueAt(i, 0).toString();
            comanda.setCodigoComanda(codigo_comanda);

            String codigo_mesa = tabla.getValueAt(i, 1).toString();
            comanda.setCodigoMesa(codigo_mesa);

            String nombre_plato = tabla.getValueAt(i, 2).toString();
            comanda.setNombrePlato(nombre_plato);

            String cantidad_plato = tabla.getValueAt(i, 3).toString();
            comanda.setCantidadPlato(cantidad_plato);

            String categoria_plato = tabla.getValueAt(i, 4).toString();
            comanda.setCategoriaPlato(categoria_plato);

            String fecha_comanda = tabla.getValueAt(i, 5).toString();
            comanda.setFechaComanda(fecha_comanda);

            objetosComanda.add(comanda);

        }

        FileOutputStream fos = null;
        ObjectOutputStream oos = null;

        try {
            String rutaArchivo = "src/main/java/ficheros/comanda.bin";
            fos = new FileOutputStream(rutaArchivo);
            oos = new ObjectOutputStream(fos);

            oos.writeObject(objetosComanda);

            JOptionPane.showMessageDialog(null, "Datos guardados con éxito en binario", "Operación exitosa", JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al guardar los datos en binario", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        } finally {
            try {
                if (fos != null) {
                    fos.close();
                }
                if (oos != null) {
                    oos.close();
                }
            } catch (Exception e) {

            }
        }
    }


    public void ficheroTexto(JTable tabla) {
        StringBuilder sb = new StringBuilder();

        //Encabezados de las columnas
        sb.append("Comanda, Mesa, Plato, Cantidad, Categoría, Fecha\n");

        for (int i = 0; i < tabla.getRowCount(); i++) {

            String cod_comanda = tabla.getValueAt(i, 0).toString();
            String cod_mesa = tabla.getValueAt(i, 1).toString();
            String nomb_plato = tabla.getValueAt(i, 2).toString();
            String cantidad_plato = tabla.getValueAt(i, 3).toString();
            String categoria_plato = tabla.getValueAt(i, 4).toString();
            String fecha = tabla.getValueAt(i, 5).toString();
            
            //Formateamos los datos en una linea y agregarlos al StringBuilder
            sb.append(cod_comanda).append(",").append(cod_mesa).append(",")
                    .append(nomb_plato).append(",").append(cantidad_plato).append(",")
                    .append(categoria_plato).append(",").append(fecha).append("\n");

        }

        try (FileWriter writer = new FileWriter("src/main/java/ficheros/comanda.txt");){
            
            writer.write(sb.toString());
            JOptionPane.showMessageDialog(null, "Fichero txt creado con éxito", "Operación exitosa", JOptionPane.INFORMATION_MESSAGE);
            
            
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error al crear el fichero txt", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(comprobarComanda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(comprobarComanda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(comprobarComanda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(comprobarComanda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                comprobarComanda dialog = new comprobarComanda(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel background;
    private javax.swing.JButton btnCargarDatos;
    private javax.swing.JButton btnGenerarObj;
    private javax.swing.JButton btnGenerarTxt;
    private javax.swing.JButton btnGenerarXml;
    private javax.swing.JButton btnTicketBarra;
    private javax.swing.JButton btnTicketCocina;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel subtituloPanel;
    private javax.swing.JTable tablaComanda;
    private javax.swing.JLabel tituloPanel;
    private javax.swing.JTextField txtcodigoComanda;
    // End of variables declaration//GEN-END:variables
}
